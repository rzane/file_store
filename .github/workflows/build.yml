name: Build
on: [push]
jobs:
  # Lint should only run against the latest versions.
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    env:
      MIX_ENV: dev
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        elixir: ["1.18"]
        otp: ["27"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_

      - name: Install depenencies
        run: mix do deps.get, deps.compile

      - name: Check formatting
        run: mix format --check-formatted

      - name: Check for unused dependencies
        run: mix deps.unlock --check-unused

      - name: Cache dialyzer
        uses: actions/cache@v3
        with:
          path: priv/plts
          key: plts-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}

      - name: Dialyzer
        run: mix dialyzer

      - name: Credo
        run: mix credo --all

  # Build phase to check against multiple versions of OTP and elixir for as
  # much compatibility as we can stand.
  build:
    name: Test Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }}, OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        elixir: ["1.18", "1.17", "1.16", "1.15"]
        otp: ["27", "26", "25"]
        exclude:
          - elixir: "1.15"
            otp: "27"
          - elixir: "1.16"
            otp: "27"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start services
        run: docker compose up -d --wait

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_

      - name: Install dependencies
        run: mix do deps.get, deps.compile

      - name: Compile
        run: mix compile --force --warnings-as-errors

      - name: Test
        run: mix coveralls.github
